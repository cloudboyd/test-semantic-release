name: test-semantic-release

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - v*.*.* # skip semantic-release tags
  pull_request:

env:
  # Set default so npm doesn't complain
  NPM_TOKEN: ''
  NODE_VERSION: '20.16.0'

jobs:
  semantic-release:
    runs-on: ubuntu-latest
    # needs: [build, lint, test]
    if: github.event_name == 'push' && ( github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/release' )
    steps:
      - uses: actions/checkout@v2
      - name: setup (${{ env.NODE_VERSION }})
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'
      # - name: docker login
      #   run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
      # - name: docker build
      #   # do this here once to check if it works at all
      #   # (the build kicked of by SR later will use the cached layers)
      #   run: docker build --build-arg VERSION="ci" --build-arg NPM_TOKEN="${{ secrets.NPM_TOKEN }}" -t local-image -f ./Dockerfile .
      - name: semantic-release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        # run: npx -p "@semantic-release/exec" semantic-release --debug
        run: npx semantic-release --debug